<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DevOps on JoeyLog</title>
    <link>https://joeyworld.github.io/categories/devops/</link>
    <description>Recent content in DevOps on JoeyLog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <lastBuildDate>Fri, 02 Feb 2018 15:19:45 +0000</lastBuildDate><atom:link href="https://joeyworld.github.io/categories/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS Elastic Beanstalk &#43; CI 를 활용한 Django 배포 자동화</title>
      <link>https://joeyworld.github.io/blog/aws-elastic-beanstalk-ci-%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-django-%EB%B0%B0%ED%8F%AC-%EC%9E%90%EB%8F%99%ED%99%94/</link>
      <pubDate>Fri, 02 Feb 2018 15:19:45 +0000</pubDate>
      
      <guid>https://joeyworld.github.io/blog/aws-elastic-beanstalk-ci-%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-django-%EB%B0%B0%ED%8F%AC-%EC%9E%90%EB%8F%99%ED%99%94/</guid>
      <description>최근에 프로젝트를 진행하다가 알게 된 CI 와 배포 자동화 기법을 사용해서 AWS 배포 자동화를 설정해본 결과, 엄청 편하고 한번만 알아두면 두고두고 사용할 수 있을 것 같아서 이렇게 포스트로 정리하게 되었습니다!
이 포스트를 쓰기 전까지만 해도 나는 배포를 할때 이런 과정들을 밟았다.
 로컬에서 테스트를 완료한다 AWS 에 배포환경을 구축한다. 압축해서 한땀한땀 올리거나 command line 을 사용해서 손수 배포한다.  이 과정을 배포할 때 마다 하려니깐 생각보다 은근 귀찮았다. 단순 반복 작업이긴 하지만, github 에 푸시도 하고 배포도 할려니깐 똑같은 일을 두 번 하는 느낌도 들었다.</description>
    </item>
    
  </channel>
</rss>
